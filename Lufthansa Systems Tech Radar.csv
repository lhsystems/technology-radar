name,ring,quadrant,isNew,description
Infrastructure as code,Adopt,Techniques,FALSE,"<p>DEMO Although <strong>infrastructure as code</strong> is a relatively old technique (we’ve featured it in the Radar in 2011), it has become vitally important in the modern cloud era where the act of setting up infrastructure has become the passing of configuration instructions to a cloud platform. When we say ""as code"" we mean that all the good practices we've learned in the software world should be applied to infrastructure. Using source control, adhering to the <a href=""https://en.wikipedia.org/wiki/Don%27t_repeat_yourself"">DRY principle</a>, modularization, maintainability, and using automated testing and deployment are all critical practices. Those of us with a deep software and infrastructure background need to empathize with and support colleagues who do not. Saying ""treat infrastructure like code"" isn't enough; we need to ensure the hard-won learnings from the software world are also applied consistently throughout the infrastructure realm.</p>"
Micro frontends,Adopt,Techniques,FALSE,"<p><strong><a href=""https://micro-frontends.org/"">Micro-frontends</a></strong> extends the concepts of <strong><a href=""https://martinfowler.com/articles/microservices.html"">microservices</a></strong> to the frontend world. The idea is to think about a web app as a composition of features which are owned by independent teams. Each team has a distinct area of business or mission it cares about and specialises in. <strong><a href=""https://micro-frontends.org/"">Micro-frontends</a></strong> can be implemented using various web programming mechanisms like <strong><a href=""https://reactjs.org/"">React.js</a></strong>, <strong><a href=""https://angularjs.org/"">Angular.js</a></strong> or even a combination of these (only if part of deliberate transition strategy i.e. avoid microfrontend anarchy). We're confident this style will allow our organizations to decompose UI and enable parallel development across multiple teams.</p>"
Self-Contained Systems with microservices,Adopt,Techniques,FALSE,"<p>The <strong><a href=""https://scs-architecture.org/"">Self-Contained Systems</a></strong> (SCS) with <strong><a href=""https://martinfowler.com/articles/microservices.html"">microservices</a></strong> is an architecture style focussing on a separation of functionality into many independent systems, making the complete logical system a collaboration of many smaller software systems. This avoids the problem of large monoliths that grow constantly and eventually become unmaintainable. This architecture style combines the benefits of monolithic patterns as well as microservice patterns and keeps the potential complexity of a pure microservice architecture under control.</p>"
Domain Driven Design,Adopt,Techniques,FALSE,"<p>Use <strong><a href=""https://en.wikipedia.org/wiki/Domain-driven_design"">Domain Driven Design</a></strong> concepts and principles for decomposing the application/solution into sub-systems which are responsible for entire life cycle of its domain.</p>"
Arc42,Adopt,Techniques,FALSE,"<p><strong><a href=""https://docs.arc42.org/home/"">Arc42</a></strong> our standard way for documenting and communicating software and system architectures.</p>"
API Management,Adopt,Techniques,FALSE,"<p>We are strongly moving towards <strong><a href=""https://medium.com/better-practices/api-first-software-development-for-modern-organizations-fdbfba9a66d3"">API First strategy</a></strong> where we treat our APIs as first-class-citizens. As we setup more and more SCS, the amount of exposed APIs will grow with a heavy magnitute and require an <a href=""https://www.redhat.com/en/topics/api/what-is-api-management"">API Management</a> tool. With this tool, we want to centralizing control of our API including life cycle management, analytics, access control, monetization, and developer portal. Our APIs are defined using <a href=""https://www.openapis.org/"">OpenAPI Specification (OAS)</a> standard and we recognize this to be most popular open-source framework for defining and documenting REST APIs</p>"
2-Factor Authentication,Adopt,Techniques,FALSE,"<p><strong><a href=""https://en.wikipedia.org/wiki/Multi-factor_authentication"">2-Factor Auth</a></strong> for our web and mobile apps.</p>"
Consumer Driven Contracts,Trial,Techniques,FALSE,"<p><strong><a href=""https://www.martinfowler.com/articles/consumerDrivenContracts.html"">Consumer Driven Contracts</a></strong> are an essential part of a mature <strong><a href=""https://martinfowler.com/articles/microservices.html"">microservices</a></strong> testing portfolio, enabling independent service deployments. Frameworks like <strong><a href=""https://pact.io/"">pact</a></strong>, <strong><a href=""https://spring.io/projects/spring-cloud-contract"">spring-cloud-contract</a></strong> because they make proper contract tests easier to implement.</p>"
Client Side Load Balancing,Adopt,Techniques,FALSE,"<p><strong><a href=""https://medium.com/@mstykt/load-balancing-in-microservices-474ad84b847d"">Client Side Loadbalancing</a></strong> ensure fail-safety in production by reaching one of multiple instances of the same application where the caller (aka the client) handles the load balancing by using well established frameworks like <strong><a href=""https://spring.io/guides/gs/spring-cloud-loadbalancer/"">Spring Cloud LoadBalancer</a></strong>, <strong><a href=""https://cloud.spring.io/spring-cloud-netflix/multi/multi_spring-cloud-ribbon.html"">Spring Cloud Ribbon</a></strong>, <strong><a href=""https://spring.io/projects/spring-cloud-openfeign"">Spring Cloud OpenFeign</a></strong></p>"
Feature toggle,Adopt,Techniques,TRUE,"<p><strong><a href=""https://www.thoughtworks.com/radar/techniques/simplest-possible-feature-toggle"">Feature toggles</a></strong> are powerful technique to modify system behavior without changing code and allows going towards <a href=""https://martinfowler.com/articles/continuousIntegration.html"">Continuous Integration</a>. We recommend using frameworks like <a href=""https://unleash.github.io/"">Unleash</a> or <a href=""https://ff4j.org/"">FF4J</a>. Unless you need A/B testing or <a href=""https://martinfowler.com/bliki/CanaryRelease.html"">canary release</a> we encourage you to use the <strong>simplest possible feature toggle</strong> instead of unnecessarily complex feature toggle frameworks.</p>"
Server to Client Events,Trial,Techniques,TRUE,"<p>In order to achieve near-realtime web and mobile applications, server to client communication patterns are supported e.g. <a href=""https://en.wikipedia.org/wiki/WebSocket"">WebSockets </a>, <a href=""https://firebase.google.com/docs/cloud-messaging""> Firebase Cloud Messaging (FCM)</a>.</p>"
OpenMessaging,Assess,Techniques,FALSE,"<p><strong><a href=""http://openmessaging.cloud/"">OpenMessaging</a></strong> for selecting our streaming and messaging products to avoid cross product compatibility issues.</p>"
CloudEvents,Assess,Techniques,FALSE,"<p><strong><a href=""https://cloudevents.io/"">CloudEvents</a></strong> is a specification for describing event data in a common way, especially in serverless applications</p>"
OpenTelemetry,Trial,Platforms,FALSE,"<p><strong><a href=""https://opentelemetry.io/"">OpenTelemetry</a></strong> is an open source observability project that merges <a href=""https://opentracing.io/"">OpenTracing</a> and <a href=""https://github.com/census-instrumentation"">OpenCensus</a>. The OpenTelemetry project includes <a href=""https://github.com/open-telemetry/opentelemetry-specification"">specification</a>, libraries, agents, and other components needed to capture telemetry from services to better observe, manage and debug them. It covers the three pillars of observability — distributed tracing, metrics and logging (currently in beta) — and its specification connects these three pieces through <a href=""https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/correlationcontext/api.md"">correlations</a>; thus you can use <em>metrics</em> to pinpoint a problem, locate the corresponding <em>traces</em> to discover where the problem occured, and ultimately study the corresponding <em>logs</em> to find the exact root cause. OpenTelemetry components can be connected to back-end observability systems such as <a href=""/radar/tools/prometheus"">Prometheus</a> and <a href=""/radar/tools/jaeger"">Jaeger</a> among <a href=""https://opentelemetry.io/registry/?s=exporter"">others</a>. Formation of OpenTracing is a positive step toward the convergence of standardization and the simplification of tooling.</p>"
Business intelligence (BI) platform,Adopt,Platforms,FALSE,"<p><strong><a href=""https://www.gartner.com/en/information-technology/glossary/bi-platforms"">BI Platforms</a></strong> enable us to build business intelligence applications by providing capabilities in three categories: analysis, such as online analytical processing (OLAP); information delivery, such as reports and dashboards; and platform integration, such as BI metadata management and a development environment. They also allow us to satisy cusotmer requirements towards self-service reporting. We recommend using platforms like <a href=""https://www.tableau.com/"">Tableau</a> or <a href=""https://powerbi.microsoft.com/en-us/what-is-power-bi/"">PowerBI</a></p>"
Event Mesh,Trial,Platforms,FALSE,"<p><strong><a href=""https://solace.com/what-is-an-event-mesh/"">Event mesh</a></strong> is an architectural layer that routes events from producer to consumer no matter where our apps are deployed and is composed of a network of <a href=""https://solace.com/what-is-an-event-broker/"">event brokers</a>. As we are heavily moving towards modernizing our applications to be cloud-native in nature, we will require to support hybrid setup where modernized application sub-systems are running in the cloud and classic applications continue to run in on-prem datacenters. Event mesh allows us to seemslesly connect these applications without being aware of their execution in different environment/datacenters. Usage of tools like <a href=""https://solace.com/"">Solace</a>, <a href=""https://kafka.apache.org/"">Apache Kafka</a> or <a href=""https://pulsar.apache.org/"">Apache Pulsar</a> bring us towards Hybrid/multi-cloud event distribution and management</p>"
Firebase Cloud Messaging (FCM),Adopt,Platforms,FALSE,"<p>With <strong><a href=""https://firebase.google.com/docs/cloud-messaging"">Firebase Cloud Messaging (FCM)</a></strong> we setup reliable and battery-efficient connection between our server and devices allowing us to deliver and receive messages/notifications on iOS, Android, and the web at no cost.</p>"
Spring Eco-System,Adopt,Platforms,FALSE,"<p><strong><a href=""https://spring.io/projects/spring-framework"">Spring eco-system</a></strong> is our default preferred choice for developing cloud-native java-based enterprise applications. Its modular nature and support for diverse application infrastructure needs (via its sub-projects like <strong>Spring Boot, Spring Cloud</strong>, Spring Integration, Spring Security, Spring Session, Spring Kafka, Spring Vault) makes it our preferred platform for developing cloud-native applications.</p>"
Open Policy Agent (OPA),Trial,Tools,FALSE,"<p><strong><a href=""https://www.openpolicyagent.org/"">Open Policy Agent (OPA)</a></strong> has rapidly become a favorable component of many distributed cloud-native solutions that we build for our clients. OPA provides a uniform framework and <a href=""https://www.openpolicyagent.org/docs/latest/#rego"">language</a> for declaring, enforcing and controlling policies for various components of a cloud-native solution. It's a great example of a tool that implements <a href=""/radar/techniques/security-policy-as-code"">security policy as code</a>. We've had a smooth experience using OPA in multiple scenarios, including deploying resources to K8s clusters, enforcing access control across services in a <a href=""/radar/techniques/service-mesh"">service mesh</a> and fine-grained security controls as code for accessing application resources. A recent commercial offering, <a href=""https://www.styra.com/"">Styra's Declarative Authorization Service (DAS)</a>, eases the adoption of OPA for enterprises by adding a management tool, or control plane, to OPA for K8s with a prebuilt policy library, impact analysis of the policies and logging capabilities. We look forward to maturity and extension of OPA beyond operational services to (big) data-centric solutions.</p>"
Postgresql,Adopt,Tools,FALSE,"<p><strong><a href=""https://www.postgresql.org/"">Postgresql</a></strong> is a powerful, open source object-relational database system with strong reputation for reliability, feature robustness, and performance.</p>"
Mariadb,Adopt,Tools,FALSE,"<p><strong><a href=""https://www.postgresql.org/"">MariaDB</a></strong> is one of the most popular open source relational databases, made by the original developers of MySQL and guaranteed to stay open source. It is part of most cloud offerings and the default in most Linux distributions. It is built upon the values of performance, stability, and openness. Recent new functionality includes advanced clustering with Galera Cluster 4, compatibility features with Oracle Database and Temporal Data Tables, allowing one to query the data as it stood at any point in the past.</p>"
Oracle,Hold,Tools,FALSE,"<p><strong><a href=""https://www.oracle.com/database/"">Oracle Database</a></strong> is a multi-model database management system produced and marketed by Oracle Corporation. It is a database commonly used for running online transaction processing (OLTP), data warehousing (DW) and mixed (OLTP & DW) database workloads. Oracle Database is available by several service providers on-prem, on-cloud, or as hybrid cloud installation.</p>"
Apigee,Adopt,Tools,FALSE,"<p><strong><a href=""https://cloud.google.com/apigee"">Apigee</a></strong> is a platform for developing and managing APIs and provides an abstraction to our backend service APIs, security, rate limiting, quotas, analytics, and more enabling us to move faster in our API-led innovations.</p>"
Mashery,Adopt,Tools,FALSE,"<p><strong><a href=""https://www.tibco.com/de/products/api-management"">Mashery</a></strong> delivers rich capabilities for our API Management requirements and we believe it will enable us towards API-led innovations, agility, new business models and setting up a digital business platform.</p>"
Drools Business Rule Engine,Adopt,Tools,FALSE,"<p><strong><a href=""https://www.drools.org/"">Drools</a></strong> is one of the most popular Business Rules Management Systems (BRMS) solution and its Business Rule Engine massively supports customizable legal regulations to be incorporated in our products.</p>"
Camunda BPMN Engine,Adopt,Tools,FALSE,"<p><strong><a href=""https://camunda.com/"">Camunda</a></strong>, an opensource workflow automation tool allows automating our business processes and achieve digital transformation. </p>"
Serverless Workflow,Trial,Tools,FALSE,"<p><strong><a href=""https://serverlessworkflow.github.io/"">Serverless Workflow</a></strong> defines a declarative and domain-specific workflow for orchestrating our event-driven and distributed services. </p>"
Redis,Adopt,Tools,FALSE,"<p><strong><a href=""https://redis.io/"">Redis</a></strong> is an open source, in-memory data structure store, used as a distributed cache in our event-driven and distributed services. </p>"
Hazelcast,Adopt,Tools,FALSE,"<p><strong><a href=""https://github.com/hazelcast/hazelcast"">Hazelcast</a></strong> is an open source distributed in-memory data store, highly optimized and with low latencies used as a distributed cache in our event-driven and distributed services. Very simple to form cluster with Hazelcast and it automatically replicates data across the cluster adding seemless failure tolerance.</p>"
Keycloak,Adopt,Tools,FALSE,"<p><strong><a href=""https://www.keycloak.org/"">Keycloak</a></strong> is an open source Identity and Access Management (IAM) aimed at modern applications and services. It makes it easy to secure applications and services with little to no code and has rich capabilities like Single-Sign On, Identity Brokering and Social Login and User Federation. It is based on standard protocols and provides support for OpenID Connect, OAuth 2.0, and SAML. </p>"
Okta,Trial,Tools,FALSE,"<p><strong><a href=""https://www.okta.com/"">Okta</a></strong> is Identity and Access Management (IAM) and provides capabilities to manage and secure user authentication into modern applications, and for developers to build identity controls into applications.</p>"
Auth0,Trial,Tools,FALSE,"<p><strong><a href=""https://auth0.com/"">Auth0</a></strong> is a flexible, drop-in solution to add authentication and authorization services to your applications. We believe it can assist us in avoiding the cost, time, and risk that comes with building your own solution to authenticate and authorize users.</p>"
ADFS OIDC,Trial,Tools,False,"<p><strong><a href=""https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/ad-fs-overview"">AD FS</a></strong> Active Directory Federation Service (AD FS) enables Federated Identity and Access Management by securely sharing digital identity and entitlements rights across security and enterprise boundaries. AD FS extends the ability to use single sign-on functionality that is available within a single security or enterprise boundary to Internet-facing applications to enable customers, partners, and suppliers a streamlined user experience while accessing the web-based applications of an organization.</p>"
Spiffe,Trial,Tools,False,"<p>As a is a <a href=""https://www.cncf.io/"">CNCF</a> incubating project, <strong><a href=""https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/ad-fs-overview"">Spiffe</a></strong> is a universal identity control plane for distributed systems, supports securing microservice communications, secure authentication to common database.</p>"
SonarQube,Adopt,Tools,FALSE,"<p><strong><a href=""https://www.sonarqube.org/"">SonarQube</a></strong> for continuous code inspection to enable code quality and security.</p>"
Checkmarx,Adopt,Tools,FALSE,"<p><strong><a href=""https://www.checkmarx.com/"">Checkmarx</a></strong>to scans source code and identify security vulnerabilities within the code like SQL Injection, XSS etc.</p>"
Veracode,Trial,Tools,FALSE,"<p><strong><a href=""https://www.veracode.com/"">Veracode</a></strong> manages security risk across entire application portfolio including SAST, DAST, SCA, and manual penetration testing.</p>"
Kafka,Adopt,Tools,FALSE,"<p><strong><a href=""https://kafka.apache.org/"">Kafka</a></strong> our primary event streaming and message broker for event-driven applications.</p>"
Solace,Trial,Tools,FALSE,"<p><strong><a href=""https://solace.com/"">Solace</a></strong> our primary event mesh platform.</p>"
Nats,Assess,Tools,FALSE,"<p><strong><a href=""https://nats.io/"">Nats</a></strong> is high performance open source messaging system for cloud native, IoT and microservice applications.</p>"
Pulsar,Assess,Tools,FALSE,"<p><strong><a href=""https://pulsar.apache.org/"">Pulsar</a></strong> open source cloud-native, distributed messaging and streaming platform.</p>"
Artemis,Hold,Tools,FALSE,"<p><strong><a href=""https://activemq.apache.org/"">Artemis</a></strong> as message broker for JMS, JNDI and as next generation of ActiveMQ.</p>"
MongoDB,Adopt,Tools,FALSE,"<p><strong><a href=""https://www.mongodb.com/"">MongoDB</a></strong> is our default choice for document based distributed database.</p>"
Cassandra,Adopt,Tools,FALSE,"<p><strong><a href=""https://cassandra.apache.org/"">Cassandra</a></strong> is our default choice for distributed, wide column store.</p>"
HBase,Adopt,Tools,FALSE,"<p><strong><a href=""https://hbase.apache.org/"">HBase</a></strong> is our default choice for distributed, scalable big data store.</p>"
Neo4J,Adopt,Tools,FALSE,"<p><strong><a href=""https://neo4j.com/"">Neo4J</a></strong> is our default choice for distributed, scalable graph database.</p>"
DynamoDB ,Hold,Tools,FALSE,"<p><strong><a href=""https://aws.amazon.com/dynamodb/"">DynamoDB</a></strong> due to it being Amazon proprietary NoSQL database, we currently prefer other open-source managed NoSQL stores.</p>"
Couchbase,Assess,Tools,FALSE,"<p><strong><a href=""https://www.couchbase.com/"">Couchbase</a></strong> is an alternative key-value and document-oriented NoSQL database.</p>"
CouchDB,Assess,Tools,FALSE,"<p><strong><a href=""https://couchdb.apache.org/"">CouchDB</a></strong> is an alternative document-oriented NoSQL database.</p>"
TiKV,Assess,Tools,FALSE,"<p><strong><a href=""https://tikv.org/"">TiKV</a></strong> is a distributed transactional key-value database, a graduated CNCF project and a promising alternative to our NoSQL approach.</p>"
Java,Adopt,languages-and-frameworks,FALSE,"<p><strong><a href=""https://en.wikipedia.org/wiki/Java_(programming_language)"">Java</a></strong> is a class-based, object-oriented programming language that is designed to have as few implementation dependencies as possible. It is a general-purpose programming language intended to let application developers write once, run anywhere meaning that compiled Java code can run on all platforms that support Java without the need for recompilation.</p>"
.NET/C#,Adopt,languages-and-frameworks,FALSE,"<p><strong><a href=""https://dotnet.microsoft.com/learn/dotnet/what-is-dotnet"">.Net</a></strong> is a free, cross-platform, open source developer platform for building many different types of applications. With <strong><a href=""https://dotnet.microsoft.com/learn/dotnet/what-is-dotnet"">.Net</a></strong>, you can use multiple languages, editors, and libraries to build for web, mobile, desktop, games, and IoT. We envision to write <strong><a href=""https://dotnet.microsoft.com/learn/dotnet/what-is-dotnet"">.Net</a></strong> apps in <strong><a href=""https://en.wikipedia.org/wiki/C_Sharp_(programming_language)"">C#</a></strong> which is a simple, modern, object-oriented, and type-safe programming language.</p>"
JavaScript/TypeScript,Adopt,languages-and-frameworks,FALSE,"<p><strong><a href=""https://www.typescriptlang.org/"">Typescript</a></strong> is a modern age <strong><a href=""https://en.wikipedia.org/wiki/JavaScript"">Javascript</a></strong> development language. It is a statically compiled language to write clear and simple <strong><a href=""https://en.wikipedia.org/wiki/JavaScript"">Javascript</a></strong> code. It can be run on <strong><a href=""https://en.wikipedia.org/wiki/Node.js"">Node js</a></strong> or any browser which supports <strong><a href=""https://en.wikipedia.org/wiki/ECMAScript#Versions"">ECMAScript 3</a></strong> or newer versions.</p>"
GoLang,Trial,languages-and-frameworks,FALSE,"<p><strong><a href=""https://golang.org/"">Golang</a></strong> is an open source programming language that makes it easy to build simple, reliable, and efficient software. Its concurrency mechanisms make it easy to write programs that get the most out of multicore and networked machines, while its novel type system enables flexible and modular program construction. Go compiles quickly to machine code yet has the convenience of garbage collection and the power of run-time reflection. It's a fast, statically typed, compiled language that feels like a dynamically typed, interpreted language.</p>"
C/C++,Hold,languages-and-frameworks,FALSE,"<p><strong><a href=""https://en.wikipedia.org/wiki/C%2B%2B"">C/C++</a></strong> to be used for performance critical applications.</p>"
Python,Hold,languages-and-frameworks,FALSE,"<p><strong><a href=""https://www.python.org/about/"">Python</a></strong> to be used as preferred language for MachineLearning as the availability of libraries and open source tools make it ideal choice for developing ML models.</p>"
React Hooks,Adopt,languages-and-frameworks,FALSE,"<p><strong><a href=""https://reactjs.org/docs/hooks-intro.html"">React Hooks</a></strong> have introduced a new approach to managing stateful logic; given React components have always been closer to functions than classes, Hooks have embraced this and brought state to the functions, instead of taking function as methods to the state with classes. Based on our experience, Hooks improve reuse of functionality among components and code readability. Given Hooks’ testability improvements, using <a href=""https://reactjs.org/docs/test-renderer.html"">React Test Renderer</a> and <a href=""/radar/languages-and-frameworks/react-testing-library"">React Testing Library</a>, and their growing community support, we consider them our approach of choice.</p>"
Liquibase,Adopt,languages-and-frameworks,FALSE,"<p><strong><a href=""https://www.liquibase.org/"">Liquibase</a></strong> for tracking, versioning and deploying database changes in an automated fashion and without manual interventions. Supports one of the most attractive feature, to roll changes back and forward from a specific point — saving you from needing to know what was the last change/script you ran on a specific DB instance.</p>"
Flyway,Trial,languages-and-frameworks,FALSE,"<p><strong><a href=""https://flywaydb.org/"">Flyway</a></strong> is an open-source tool helps in implementing automated and version-based database migrations. It allows us to define the required update operations in an SQL script or as Java code and can be run from a command line client or automatically as part of build process or integrated into our Java application.</p>"
Swift (iOS Native Apps),Trial,languages-and-frameworks,FALSE,"<p><strong><a href=""https://www.apple.com/swift/"">Swift</a></strong> for creating iOS native apps.</p>"
Java (Android Native Apps),Trial,languages-and-frameworks,FALSE,"<p><strong><a href=""https://developer.android.com/codelabs/build-your-first-android-app#0"">Java</a></strong> for creating Android native apps.</p>"
Progressive Web Apps(PWA),Trial,languages-and-frameworks,FALSE,"<p><strong><a href=""https://web.dev/what-are-pwas/"">Java</a></strong> for creating apps reaching anyone, anywhere, on any device with a single codebase.</p>"
ReactJS,Adopt,languages-and-frameworks,FALSE,"<p><strong><a href=""https://en.wikipedia.org/wiki/React_(web_framework)"">ReactJS</a></strong> is an open-source, front end, JavaScript library for building user interfaces or UI components. It is maintained by Facebook and a community of individual developers and and can be used as a base in the development of single-page or mobile applications.</p>"
AngularJS,Adopt,languages-and-frameworks,FALSE,"<p><strong><a href=""https://en.wikipedia.org/wiki/AngularJS"">AngularJS</a></strong> is a JavaScript-based open-source front-end web framework mainly maintained by Google and by a community of individuals and corporations to address many of the challenges encountered in developing single-page applications.</p>"
VueJS,Trial,languages-and-frameworks,FALSE,"<p><strong><a href=""https://vuejs.org/"">Vue.js</a></strong> is an open-source model–view–viewmodel front end JavaScript framework for building user interfaces and single-page applications.</p>"
Atomikos,Adopt,languages-and-frameworks,FALSE,"<p><strong><a href=""https://www.atomikos.com/"">Atomikos</a></strong> our light-weight transaction management library for self-contained cloud native applications.</p>"
Bitronix,Assess,languages-and-frameworks,FALSE,"<p><strong><a href=""https://github.com/bitronix/btm"">Bitronix</a></strong> our XA transaction manager as an implementation of the JTA 1.1 API.</p>"
LIXA (XTA),Assess,languages-and-frameworks,FALSE,"<p><strong><a href=""https://dzone.com/articles/microservices-and-distributed-transactions"">LIXA (XTA)</a></strong> our XTA transaction manager and supports C++, Java, Python languages.</p>"
